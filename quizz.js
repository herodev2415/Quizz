 // Questions et r√©ponses
 const questions = [
    "Qui a de tr√®s longs cheveux magiques et vit enferm√©e dans une tour ?",
    "Quelle princesse vit sous l'oc√©an et r√™ve de devenir humaine ?",
    "Quel voleur au grand c≈ìur trouve une lampe magique ?",
    "Qui croque une pomme empoisonn√©e et tombe dans un profond sommeil ?",
    "Quelle jeune femme perd une pantoufle de verre en fuyant un bal ?",
    "Quel lion doit reprendre sa place en tant que roi de la savane ?",
    "Quelle reine poss√®de des pouvoirs de glace et vit √† Arendelle ?",
    "Quelle jeune femme tombe amoureuse d'une b√™te prisonni√®re d'un ch√¢teau enchant√© ?",
    "Quelle guerri√®re chinoise se d√©guise en homme pour aller √† la guerre ?",
    "Quelle h√©ro√Øne traverse l'oc√©an pour sauver son √Æle et restaurer le c≈ìur de Te Fiti ?"
];

const reponses = [
    "raiponce", "ariel", "aladdin", "blanche neige", "cendrillon",
    "simba", "elsa", "belle", "mulan", "vaiana"
];

const choix = [
    ["raiponce", "cendrillon", "belle", "mulan"],
    ["vaiana", "ariel", "elsa", "blanche neige"],
    ["simba", "peter pan", "hercule", "aladdin"],
    ["cendrillon", "raiponce", "blanche neige", "ariel"],
    ["mulan", "cendrillon", "belle", "vaiana"],
    ["simba", "mufasa", "scar", "rafiki"],
    ["anna", "ariel", "elsa", "belle"],
    ["raiponce", "belle", "mulan", "jasmine"],
    ["cendrillon", "vaiana", "elsa", "mulan"],
    ["vaiana", "ariel", "belle", "mulan"]
];

let score = 0;
let index = 0;
const reponsesUtilisateur = [];

function updateProgressBar(score, totalQuestions) {
    const percentage = (score / totalQuestions) * 100;
    const progressBar = document.querySelector('.score-bar');
    const progressPercentage = document.getElementById('progress-percentage');
    const progressEmoji = document.getElementById('progress-emoji');

    document.querySelector('.score-progress-container').style.display = "block";

    // Mise √† jour du pourcentage affich√©
    progressPercentage.textContent = `${Math.round(percentage)}%`;

    // Mise √† jour de la largeur de la barre et de la position de l'emoji
    progressBar.style.width = percentage + "%";
    progressEmoji.style.left = percentage + "%";

    // Animation de la couleur de gauche √† droite
    animerCouleur(percentage);

    // Mise √† jour de l'emoji en fonction du pourcentage
    if (percentage >= 80) {
        progressEmoji.textContent = "üòÑ";
        progressEmoji.style.animation = "bounce 1s infinite";
    } else if (percentage >= 50) {
        progressEmoji.textContent = "üôÇ";
        progressEmoji.style.animation = "bounce 1s infinite";
    } else {
        progressEmoji.textContent = "üò¢";
        progressEmoji.style.animation = "none";
    }
}

function animerCouleur(scorePourcent) {
    const progressBar = document.querySelector('.score-bar');
    let startColor = "#f44336"; // Rouge (d√©part)
    let endColor = "#f44336";   // Rouge (par d√©faut)
    if (scorePourcent >= 80) {
        endColor = "#4caf50"; // Vert (objectif atteint)
    } else if (scorePourcent >= 50) {
        endColor = "#ff9800"; // Orange (moyenne)
    }
    // On cr√©e un d√©grad√© qui √©volue de gauche √† droite selon le score
    progressBar.style.background = `linear-gradient(to right, ${startColor}, ${endColor} ${scorePourcent}%)`;
}

function hexToRgb(hex) {
    const bigint = parseInt(hex.slice(1), 16);
    return {
        r: (bigint >> 16) & 255,
        g: (bigint >> 8) & 255,
        b: bigint & 255
    };
}

function afficherQuestion() {
    if (index >= questions.length) {
        document.getElementById("question-number").textContent = "";
        document.getElementById("question").textContent = "‚ú® Quiz termin√© ! ‚ú®";
        document.getElementById("choices").innerHTML = "";
        document.getElementById("result").textContent = `Votre score est : ${score} sur ${questions.length}.`;

        updateProgressBar(score, questions.length);
        document.getElementById("show-corrections").style.display = "inline-block";
        return;
    }

    document.getElementById("question-number").textContent = `Question ${index + 1} sur ${questions.length}`;
    document.getElementById("question").textContent = questions[index];
    const choicesContainer = document.getElementById("choices");
    choicesContainer.innerHTML = "";

    // Cr√©er un tableau de r√©ponses et leurs images respectives
    const images = {
        "raiponce": "raiponce.jpg",
        "cendrillon": "cendrillon.jpg",
        "belle": "belle.jpg",
        "ariel": "ariel.jpg",
        "aladdin": "aladdin.jpg",
        "blanche neige": "blanche neige.jpg",
        "simba": "simba.jpg",
        "elsa": "elsa.jpg",
        "mulan": "mulan.jpg",
        "vaiana": "vaiana.jpg",
        "peter pan": "peter pan.jpg",
        "hercule": "hercule hercule.jpg",
        "mufasa": "mufasa.jpg",
        "scar": "scar.jpg",
        "rafiki": "rafiki.jpg",
        "anna": "anna.jpg",
        "jasmine": "jasmine.jpg"
    };
    

    // Ajouter les choix avec une image √† c√¥t√©
    // Ajouter les choix avec une image √† c√¥t√©
for (let i = 0; i < choix[index].length; i++) {
    const choice = choix[index][i];
    const button = document.createElement("button");
    button.className = "choice-btn";

    // Cr√©er l'image
    const img = document.createElement("img");
    img.src = images[choice.toLowerCase()] || "";
    img.alt = choice;

    // Cr√©er une div contenant le nom
    const span = document.createElement("span");
    span.textContent = choice;

    // Ajouter l'image et le nom dans le bouton
    button.appendChild(img);
    button.appendChild(span);

    // Ajouter l'√©v√©nement de clic
    button.onclick = () => verifierReponse(choice, button);

    choicesContainer.appendChild(button);
}
}


function verifierReponse(reponseDonnee, boutonClique) {
    const bonneReponse = reponses[index];
    reponsesUtilisateur.push(reponseDonnee);

    const boutons = document.querySelectorAll(".choice-btn");

    for (let i = 0; i < boutons.length; i++) {
        const btn = boutons[i];
        btn.disabled = true;
        if (btn.textContent.toLowerCase() === bonneReponse) {
            btn.classList.add("correct");
        } else if (btn === boutonClique) {
            btn.classList.add("incorrect");
        }
    }

    if (reponseDonnee.toLowerCase() === bonneReponse) score++;

    setTimeout(() => {
        index++;
        afficherQuestion();
    }, 700);
}

function afficherCorrections() {
const correctionsData = [];

for (let i = 0; i < questions.length; i++) {
const userRep = reponsesUtilisateur[i] || "(aucune)";
const bonneRep = reponses[i];

correctionsData.push({
    question: questions[i],
    userRep: userRep,
    bonneRep: bonneRep,
    estJuste: userRep.trim().toLowerCase() === bonneRep.trim().toLowerCase()
});
}

localStorage.setItem("corrections", JSON.stringify(correctionsData));
window.location.href = "corrections.html";
}


afficherQuestion();